/**
 * @module ui
 * Bind Angular.js modules
 */angular.module("ui",["ui.filters","ui.directives"]);angular.module("ui.directives",[]).directive("uiChosen",[function(){var options={},ajaxOptions={minLength:3,queryLimit:10,delay:100,chosenOptions:options,searchingText:"Searching...",noresultsText:"No results.",initialQuery:false};return function(scope,elm,attrs){var handler=scope.$eval(attrs.uiChosen);if(angular.isFunction(handler)){elm.ajaxChosen(ajaxOptions,handler)}else{elm.chosen(options)}}}]);angular.module("ui.directives",[]).directive("uiLinky",[function(){return function(scope,elm,attrs){var newElm,isLink=scope.$eval(attrs.uiLinky);if(isLink){newElm=angular.element("<a>");if(attr["ng-click"]){newElm.click(function(e){if(attr.href===undefined){e.preventDefault()}scope.$eval(attr["ng-click"])})}}else{newElm=angular.element("<span>")}delete attrs.href;delete attrs["ng-click"];delete attrs.uiLinky;newElm.attr(attrs);elm.html(newElm)}}]);angular.module("ui.directives",[]).directive("uiRemove",[function(){return function(scope,elm,attrs){if(scope.$eval(attrs.uiRemove)){elm.remove()}}}]);angular.module("ui.directives",[]).directive("uiReset",[function(){return function(scope,elm,attrs){elm.wrap('<span class="ui-resetwrap" />').after('<a class="ui-reset" />').next().click(function(e){e.preventDefault();elm.val(null).trigger("change")})}}]);angular.module("ui.directives",[]).directive("uiScrollfix",[function(){return function(scope,elm,attrs){if(!attrs.jvScrollfix){attrs.jvScrollfix=elm.offset().top}$(window).scroll(function(){if(!elm.hasClass("fixed")&&window.pageYOffset>attrs.jvScrollfix){elm.addClass("fixed")}else if(elm.hasClass("fixed")&&window.pageYOffset<attrs.jvScrollfix){elm.removeClass("fixed")}})}}]);angular.module("ui.directives",[]).directive("uiShow",[function(){return function(scope,elm,attrs){if(scope.$eval(attrs.uiShow)){elm.addClass("show")}else{elm.removeClass("show")}}}]);angular.module("ui.directives",[]).directive("uiHide",[function(){return function(scope,elm,attrs){if(scope.$eval(attrs.uiShow)){elm.addClass("hide")}else{elm.removeClass("hide")}}}]);angular.module("ui.directives",[]).directive("uiToggle",[function(){return function(scope,elm,attrs){if(scope.$eval(attrs.uiShow)){elm.switchClass("show","hide")}else{elm.removeClass("hide","show")}}}]);itemBankApp.directive("uiTooltip",function($compile){return function linkingFn(scope,linkElement,attrs){var view=angular.element('<div class="help"></div>');view.prepend(angular.element("<h1></h1>"));var body=document.getElementsByTagName("body")[0];var $tooltip=angular.element(body).after(view).next();setTimeout(function(){var data=JSON.parse(attrs.uiTooltip);view.find("h1").text(item.title);view.append(angular.element("<p>"+item.body+"</p>"))},500);linkElement.bind("mouseover",function(evt){$tooltip.running=true;$tooltip.css("display","block")}).bind("mouseout",function(evt){$tooltip.running=false;$tooltip.css("display","none")});angular.element(document).bind("mousemove",function(evt){var x=parseFloat(evt.clientX)+50+"px";var y=parseFloat(evt.clientY)-50+"px";if($tooltip.running){$tooltip.css("left",x);$tooltip.css("top",y)}})}});angular.module("ui.filters",[]).filter("highlight",function(){return function(text,filter){if(filter===undefined){return text}else{return text.replace(new RegExp(filter,"gi"),'<span class="match">$&</span>')}}});