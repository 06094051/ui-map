/**
 * Adds a 'fixed' class to the element when the page scrolls past it's position.
 * @param [ajaxHandler] {function} optional handler function for using Ajax-Chosen
 * @link http://harvesthq.github.com/chosen/
 * @link https://github.com/harvesthq/chosen/
 * @link https://github.com/jobvite/ajax-chosen/
 */angular.module("ui.directives",[]).directive("uiChosen",[function(){var options={},ajaxOptions={minLength:3,queryLimit:10,delay:100,chosenOptions:options,searchingText:"Searching...",noresultsText:"No results.",initialQuery:false};return function(scope,elm,attrs){var handler=scope.$eval(attrs.uiChosen);if(angular.isFunction(handler)){elm.ajaxChosen(ajaxOptions,handler)}else{elm.chosen(options)}}}]);angular.module("ui.directives",[]).directive("uiLinky",[function(){return function(scope,elm,attrs){var newElm,isLink=scope.$eval(attrs.uiLinky);if(isLink){newElm=angular.element("<a>");if(attr["ng-click"]){newElm.click(function(e){if(attr.href===undefined){e.preventDefault()}scope.$eval(attr["ng-click"])})}}else{newElm=angular.element("<span>")}delete attrs.href;delete attrs["ng-click"];delete attrs.uiLinky;newElm.attr(attrs);elm.html(newElm)}}]);angular.module("ui.directives",[]).directive("uiRemove",[function(){return function(scope,elm,attrs){if(scope.$eval(attrs.uiRemove)){elm.remove()}}}]);angular.module("ui.directives",[]).directive("uiReset",[function(){return function(scope,elm,attrs){elm.wrap('<span class="ui-resetwrap" />').after('<a class="ui-reset" />').next().click(function(e){e.preventDefault();elm.val(null).trigger("change")})}}]);angular.module("ui.directives",[]).directive("uiScrollfix",[function(){return function(scope,elm,attrs){if(!attrs.jvScrollfix){attrs.jvScrollfix=elm.offset().top}$(window).scroll(function(){if(!elm.hasClass("fixed")&&window.pageYOffset>attrs.jvScrollfix){elm.addClass("fixed")}else if(elm.hasClass("fixed")&&window.pageYOffset<attrs.jvScrollfix){elm.removeClass("fixed")}})}}]);angular.module("ui.directives",[]).directive("uiShow",[function(){return function(scope,elm,attrs){if(scope.$eval(attrs.uiShow)){elm.addClass("show")}else{elm.removeClass("show")}}}]);angular.module("ui.directives",[]).directive("uiHide",[function(){return function(scope,elm,attrs){if(scope.$eval(attrs.uiShow)){elm.addClass("hide")}else{elm.removeClass("hide")}}}]);angular.module("ui.directives",[]).directive("uiToggle",[function(){return function(scope,elm,attrs){if(scope.$eval(attrs.uiShow)){elm.switchClass("show","hide")}else{elm.removeClass("hide","show")}}}]);angular.module("ui.filters",[]).filter("highlight",function(){return function(text,filter){if(filter===undefined){return text}else{return text.replace(new RegExp(filter,"gi"),'<span class="match">$&</span>')}}});angular.module("ui",["ui.filters","ui.directives"]);